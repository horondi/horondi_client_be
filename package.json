{
  "name": "horondi_client_be",
  "version": "1.0.0",
  "type": "commonjs",
  "description": "Horondi",
  "main": "server.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/ita-social-projects/horondi_client_be"
  },
  "private": "true",
  "resolutions": {
    "apollo-server-core/fs-capacitor": "^6.2.0",
    "graphql-upload": "^11.0.0"
  },
  "scripts": {
    "start": "cross-env NODE_ENV=development nodemon server.js",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "test-server": "cross-env NODE_ENV=test nodemon server.js",
    "test-server-db": "npm run docker-db-stop && npm run docker-db-start && npm run test-server",
    "test": "jest --coverage --detectOpenHandles --verbose --forceExit",
    "generate": "graphql-codegen",
    "preinstall": "npm i npm-force-resolutions & npx npm-force-resolutions",
    "docker-db-start": "cd ./docker && docker-compose up -d",
    "docker-db-stop": "cd ./docker && docker-compose down",
    "mongodump": "mongodump --db=horondi --uri=mongodb+srv://user-read-write1:sfd$42A3a@horondi-yl27g.mongodb.net/horondi?retryWrites=true&w=majority",
    "test-docker": "npm run docker-db-stop && npm run docker-db-start && npm run test",
    "restore-db": "cd ./docker && docker-compose exec -T database sh -c \"mongorestore dump/horondi --db=horondi --uri=mongodb://root:root@localhost/horondi?authSource=admin\"",
    "restore": "mongorestore dump/horondi --db=horondi --uri=\"mongodb+srv://root:root@cluster0.9xwme.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\" "
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@apollo/client": "^3.2.1",
    "@azure/identity": "^1.0.3",
    "@azure/keyvault-secrets": "^4.0.4",
    "@azure/storage-blob": "^12.2.0-preview.1",
    "@graphql-codegen/cli": "^1.17.7",
    "@graphql-codegen/fragment-matcher": "^1.17.7",
    "@hapi/joi": "^17.1.1",
    "@sendgrid/mail": "^7.2.4",
    "agenda": "^3.1.0",
    "apollo-cache-inmemory": "^1.6.6",
    "apollo-link-http": "^1.5.17",
    "apollo-server": "^2.14.5",
    "apollo-server-express": "^2.17.0",
    "axios": "^0.21.1",
    "azure": "^2.3.1-preview",
    "azure-storage": "^2.10.3",
    "bcryptjs": "^2.4.3",
    "cloudipsp-node-js-sdk": "^1.0.5",
    "config": "^3.2.5",
    "cors": "^2.8.5",
    "cross-env": "^7.0.2",
    "crypto": "^1.0.1",
    "date-fns": "^2.16.1",
    "docker-compose": "^0.23.5",
    "dotenv": "^8.2.0",
    "email-templates": "^8.0.3",
    "express": "^4.17.1",
    "google-auth-library": "^6.1.3",
    "graphql": "^15.3.0",
    "graphql-middleware": "^4.0.2",
    "graphql-shield": "^7.3.5",
    "into-stream": "^5.1.1",
    "jimp": "^0.16.1",
    "joi": "^14.3.1",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.20",
    "migrate-mongo": "^8.1.4",
    "mongoose": "^5.9.18",
    "mongoose-middleware": "^2.0.1",
    "morgan": "^1.9.1",
    "node-fetch": "^2.6.1",
    "nodemailer": "^6.4.10",
    "nodemailer-smtp-transport": "^2.7.4",
    "npm-force-resolutions": "0.0.3",
    "open": "^8.0.2",
    "passport": "^0.4.1",
    "passport-facebook-token": "^3.3.0",
    "passport-google-token": "^0.1.2",
    "path": "^0.12.7",
    "pug": "^3.0.2",
    "react": "^16.13.1",
    "rotating-file-stream": "^2.0.2",
    "start-server-and-test": "^1.11.3",
    "uniqid": "^5.2.0",
    "util": "^0.12.3",
    "winston": "^3.3.3"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "^1.17.7",
    "@graphql-codegen/fragment-matcher": "^1.17.7",
    "@types/joi": "^14.3.4",
    "apollo-server-testing": "^2.18.1",
    "babel-eslint": "^10.1.0",
    "chance": "^1.1.5",
    "eslint": "^7.1.0",
    "eslint-config-airbnb-base": "^14.1.0",
    "eslint-config-standart": "^0.2.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-node": "^11.1.0",
    "graphql-log": "^0.1.3",
    "husky": "^4.2.5",
    "jest": "^26.3.0",
    "jest-sonar-reporter": "^2.0.0",
    "lint-staged": "^10.2.9",
    "nodemon": "^2.0.4",
    "prettier": "^1.19.1",
    "react-dev-utils": "^11.0.4"
  },
  "engines": {
    "node": "=14.15.4"
  },
  "husky": {
    "hooks": {
      "pre-commit": [
        "lint-staged"
      ]
    }
  },
  "lint-staged": {
    "*.js": [
      "prettier --write"
    ]
  },
  "jest": {
    "collectCoverage": true
  }
}
